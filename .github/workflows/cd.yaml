name: CM-Butterfly CD
on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
    paths-ignore:
      - ".github/**"
  pull_request:
    branches:
      - main

env:
  DOCKER_REGISTRY_NAME: cloudbaristaorg
  GHCR_REGISTRY_NAME: ${{ github.repository_owner }}
  IMAGE_NAME: ${{ github.event.repository.name }}

jobs:
  cd-checker:
    name: Check Continuous Delivery/Deployment
    if: github.repository_owner != 'cloud-barista'
    runs-on: ubuntu-22.04
    steps: 
      - name: check out the code
        uses: actions/checkout@v4
      - name: run if it is valid
        run:  echo "Github action's job must be proceed? [github.repository_owner == 'cloud-barista']"
        
  echo-hello-world:
    name: Publish a container image
    needs: cd-checker
    runs-on: ubuntu-22.04
    steps: 
      - name: Print hello world
        run: echo 'Hello github action world!'
      

  # publish-container-image:
  #   name: Publish a container image
  #   needs: cd-checker
  #   runs-on: ubuntu-22.04

  #   steps:
  #     - name: Checkout source code
  #       uses: actions/checkout@v4

     
  #     - name: Extract metadata from Git reference and GitHub events
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: |
  #           # image name for Docker Hub
  #           ${{env.DOCKER_REGISTRY_NAME}}/${{env.IMAGE_NAME}}
  #           # image name for GitHub Container Registry (GHCR)
  #           ghcr.io/${{env.GHCR_REGISTRY_NAME}}/${{env.IMAGE_NAME}}
  #         tags: |
  #           # See `tags` input: https://github.com/docker/metadata-action?tab=readme-ov-file#tags-input
  #           ## Tags for a push tag event
  #           # minimal (e.g., 1.2.3)
  #           type=semver,enable=true,pattern={{version}}
  #           # type=semver,pattern={{major}}.{{minor}}
  #           ## Tags for a push branch event
  #           # Tags to reflect the last commit of the active branch
  #           type=edge,enable=true,branch=main
  #           ## Other types (currently the followings may be out of scope in this project)
  #           ## Tags for a push branch event
  #           # minimal (short sha)
  #           # type=sha,enable=true,format=short            
  #           ## Tags for a push or pull_request event
  #           # type=ref,event=branch
  #           # type=ref,event=tag
  #           # type=ref,event=pr
  #           ## Tags for a schedule event - handlebars with timezone (e.g. 20200110-093000)
  #           # type=schedule,enable=true,pattern={{date 'YYYYMMDD-hhmmss' tz='Asia/Tokyo'}}

  #     # To build a multi-platform image in GitHub Actions, use the Action below
  #     # |
  #     # v

  #     # QEMU is an open source hypervisor that is used as an emulator to run applications running on other platforms.
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3
  #       with:
  #         platforms: all

  #     # Buildx is a Docker CLI extension plugin that is available by default starting with Docker 19.03 
  #     # and includes the ability to build for several different platforms.
  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Cache Docker layers
  #       uses: actions/cache@v4
  #       with:
  #         path: /tmp/.buildx-cache
  #         key: ${{ runner.os }}-buildx-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-buildx-

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.CR_PAT }}

  #     # build-push-action allows you to build a Docker image and push it to Container Registry. 
  #     # At this time, you can build an image that can run on the corresponding platform 
  #     # by specifying the platform in the platform option.
  #     - name: Build and publish
  #       id: docker_build
  #       uses: docker/build-push-action@v5
  #       with:
  #         builder: ${{ steps.buildx.outputs.name }}
  #         context: ./
  #         file: ./Dockerfile
  #         target: prod
  #         platforms: linux/amd64 # linux/arm/v7,linux/arm64,linux/386,linux/ppc64le,linux/s390x,linux/arm/v6
  #         push: ${{ github.event_name != 'pull_request' }}
  #         tags: ${{ steps.meta.outputs.tags }}
  #         cache-from: type=local,src=/tmp/.buildx-cache
  #         cache-to: type=local,dest=/tmp/.buildx-cache

  #     - name: Image digest
  #       run: echo ${{ steps.docker_build.outputs.digest }}